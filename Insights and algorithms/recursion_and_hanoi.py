# -*- coding: utf-8 -*-
"""Recursion and Hanoi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PNKEjPRc2nGAPPSzfS4znAbn3wkvxlEV
"""

def factorial(number):
  if number == 1:
    return 1
  
  return number*factorial(number-1)

def hanoi(n, source, target, available):
  global count

  if n > 0:
    hanoi(n-1, source, available, target)

    target.append(source.pop())
    count = count + 1

    hanoi(n-1, available, target, source)

moves = []

for i in range(10):
  A = list(range(i,0,-1))
  B = []
  C = []

  count = 0

  hanoi(i, A, C, B)

  moves.append(count)

print(moves)

for i in range(10):
  print(str(2**i - 1))

factorial(5)